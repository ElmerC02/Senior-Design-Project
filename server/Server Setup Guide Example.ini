project-root/
├── src/
│   ├── app/               # Next.js app router
│   ├── components/        # Shared UI components
│   ├── lib/               # Utility functions and database
│   │   └── db.ts          # PostgreSQL connection pool

        // src/lib/db.ts
import { Pool } from 'pg';

export const pool = new Pool({
  user: process.env.POSTGRES_USER || 'admin',
  host: process.env.POSTGRES_HOST || 'localhost',
  database: process.env.POSTGRES_DB || 'uncoolmath_db',
  password: process.env.POSTGRES_PASSWORD || 'password123',
  port: 5432,
});

│   ├── pages/             # Static pages (if using pages router)
│   ├── api/               # Next.js API routes
│   │   ├── users/
│   │   │   └── route.ts   # Example user API route

        // src/api/users/route.ts
import { NextResponse } from 'next/server';
import { pool } from '@/lib/db';

export async function GET() {
  const client = await pool.connect();
  try {
    const result = await client.query('SELECT * FROM users');
    return NextResponse.json(result.rows);
  } catch (error) {
    console.error('Error fetching users:', error);
    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
  } finally {
    client.release();
  }
}

│   │   ├── scores/
│   │   │   └── route.ts   # Handles score submissions and leaderboard
│   └── styles/            # Global CSS/SCSS files
├── prisma/
│   └── schema.prisma      # Prisma schema for PostgreSQL
├── docker/
│   └── docker-compose.yml # Local PostgreSQL setup

        # docker/docker-compose.yml
version: '3.9'

services:
  postgres:
    image: postgres:16
    container_name: uncoolmath_postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: uncoolmath_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:

├── package.json

        "scripts": {
  "dev": "next dev",
  "build": "next build",
  "start": "next start",
  "docker:up": "docker compose -f docker/docker-compose.yml up -d",
  "docker:down": "docker compose -f docker/docker-compose.yml down",
  "docker:logs": "docker compose -f docker/docker-compose.yml logs -f"
}

├── .env.local

        POSTGRES_USER=admin
        POSTGRES_PASSWORD=password123
        POSTGRES_DB=uncoolmath_db
        POSTGRES_HOST=localhost
        DATABASE_URL="postgresql://admin:password123@localhost:5432/uncoolmath_db"

├── tsconfig.json
└── README.md
